---
title: "Week 3, Lecture 3.2 Wrangling Practice"
author: "Sofia Ingersoll"
date: "2024-01-22"
---

## Setup

```{r message = FALSE}
# load libraries
library(tidyverse)
library(chron)
library(naniar)
library(geofacet)
library(see)
library(gghighlight)
library(ggbeeswarm)
library(ggridges)
library(tidycensus)
library(here)


source(here::here("wk3", 'KEYS.R'))
census_api_key(censusKEY)

lyme <- read_csv(here('wk3', 'data', 'LD-Case-Counts-by-County-01-20.csv'))
```

# Reading & Data Wrangling

Request API Key and add to git ignore file so it isn't publicly accessible. Then, you'll be able to access this data.
```{r}

# wrangle lyme data

lyme_clean <- lyme %>% 
  clean_names() %>% 
  rename(county = ctyname, 
         state = stname,
         status = ststatus) %>% 
  pivot_longer(cols = 6:25,
               names_to = 'city_year',
               values_to = 'reported_cases') %>% 
  mutate(year = str_remove(city_year,
                           pattern = 'cases'),
         year = as.factor(year)) %>% 
  select(-city_year)




# case no. by state
lyme_by_state <- lyme_clean %>% 
  group_by(year,
           state) %>% 
  summarize(total_cases = sum(reported_cases))
  



# us population estimates for 2019
us_state_pop <- get_estimates(geography = 'state',
                              product = 'population',
                              year = 2019) %>% 
  filter(variable == 'POP') %>% 
  select(state = NAME,
         population = value)                            # this is a good point to export as csv bc API doesn't always work perfectly.




# joining data & calculate incidents for each state during each year
lyme_pop <- left_join(lyme_by_state, us_state_pop) %>% 
  mutate(pop100k = population/100000) %>%               # estimation of population for every 100k ppl
  mutate(cases_per100k = total_cases/pop100k)
```

